using Godot;
using System;

public partial class playerAI : CharacterBody2D
{
	public const float Speed = 100.0f;
	public const float JumpVelocity = -400.0f;

	// Get the gravity from the project settings to be synced with RigidBody nodes.
	public float gravity = ProjectSettings.GetSetting("physics/2d/default_gravity").AsSingle();
	private Vector2 startPosition;
	private float distanceThreshold = 300.0f;
	private bool rightDirection = true;

	public override void _Ready()
	{
		startPosition = GlobalPosition;
	}
	
	public override void _PhysicsProcess(double delta)
	{
		Vector2 velocity = Velocity;
		

		// Add the gravity.
		if (!IsOnFloor())
			velocity.Y += gravity * (float)delta;

		// int rand_move;
		// var random = new RandomNumberGenerator();
		// random.Randomize();
		// rand_move = random.RandiRange(1, 2);
		
		float distance = GlobalPosition.DistanceTo(startPosition);

		if (distance > distanceThreshold)
		{
			startPosition = GlobalPosition;
			rightDirection = !rightDirection;
		}
		
		if (rightDirection)
		{
			MoveRight(delta);
		}
		else if (!rightDirection)
		{
			MoveLeft(delta);
		}
		MoveAndSlide();
	}

	public void MoveRight(double delta)
	{
		Vector2 velocity = Velocity;
		if (!IsOnFloor())
			velocity.Y += gravity * (float)delta;
		velocity.X = 1 * Speed;
		Velocity = velocity;
	}
	public void MoveLeft(double delta)
	{
		Vector2 velocity = Velocity;
		if (!IsOnFloor())
			velocity.Y += gravity * (float)delta;
		velocity.X = -1 * Speed;
		Velocity = velocity;
	}
}
